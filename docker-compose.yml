version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: inventory_sqlserver
    environment:
      SA_PASSWORD: "YourStrong@Passw0rd"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - inventory_network

  # Web Application
  webapp:
    build:
      context: .
      dockerfile: WebApplication1/Dockerfile
    container_name: inventory_webapp
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=InventoryDB;User Id=sa;Password=YourStrong@Passw0rd;Encrypt=True;TrustServerCertificate=True;MultipleActiveResultSets=True;
    depends_on:
      - sqlserver
    networks:
      - inventory_network
    volumes:
      - ./WebApplication1:/app

  # PostgreSQL for Odoo
  postgres:
    image: postgres:15
    container_name: inventory_postgres
    environment:
      POSTGRES_DB: odoo
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - inventory_network

  # Odoo
  odoo:
    image: odoo:16
    container_name: inventory_odoo
    ports:
      - "8069:8069"
    environment:
      - HOST=postgres
      - USER=odoo
      - PASSWORD=odoo
    depends_on:
      - postgres
    volumes:
      - odoo_data:/var/lib/odoo
      - ./inventory_integration:/mnt/extra-addons/inventory_integration
    networks:
      - inventory_network
    command: ["odoo", "--dev=reload", "--addons-path=/mnt/extra-addons"]

volumes:
  sqlserver_data:
  postgres_data:
  odoo_data:

networks:
  inventory_network:
    driver: bridge


